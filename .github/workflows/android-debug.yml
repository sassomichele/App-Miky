name: Android Debug APK

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter (3.22.2)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          cache: true

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android licenses
        run: yes | sdkmanager --licenses

      - name: Install Android platform & build-tools
        run: |
          sdkmanager "platform-tools" "cmdline-tools;latest" "platforms;android-34" "build-tools;34.0.0"

      - name: Ensure Android project (create if missing)
        run: flutter create . --platforms=android

      - name: Link SDK (local.properties)
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > android/local.properties
          cat android/local.properties

      - name: Patch Android versions (minSdk 21, compileSdk 34)
        run: |
          if [ -f android/app/build.gradle ]; then
            # nuovo formato
            sed -i 's/compileSdk *[0-9][0-9]*/compileSdk 34/g' android/app/build.gradle || true
            sed -i 's/minSdk *[0-9][0-9]*/minSdk 21/g' android/app/build.gradle || true
            # vecchio formato
            sed -i 's/compileSdkVersion *[0-9][0-9]*/compileSdkVersion 34/g' android/app/build.gradle || true
            sed -i 's/minSdkVersion *[0-9][0-9]*/minSdkVersion 21/g' android/app/build.gradle || true
          fi

      - name: Ensure lib/main.dart (fallback)
        run: |
          if [ ! -f lib/main.dart ]; then
            mkdir -p lib
            cat > lib/main.dart <<'EOF'
            import 'package:flutter/material.dart';
            void main() => runApp(const MaterialApp(home: Scaffold(body: Center(child: Text('Build OK')))));
            EOF
          fi

      - name: Flutter doctor
        run: flutter doctor -v | tee flutter_doctor.log

      - name: Flutter pub get
        run: flutter pub get | tee flutter_pub_get.log

      # --- QUI I BLOCCHI CHE CHIEDEVI ---

      - name: List existing outputs (before build)
        if: always()
        run: |
          echo "== PRE-BUILD: ls build =="
          ls -R build || true
          echo "== PRE-BUILD: ls android/app/build/outputs =="
          ls -R android/app/build/outputs || true

      - name: Build APK (debug)
        run: flutter build apk --debug --verbose | tee flutter_build.log

      - name: List outputs (after build)
        if: always()
        run: |
          echo "== POST-BUILD: ls build =="
          ls -R build || true
          echo "== POST-BUILD: ls android/app/build/outputs =="
          ls -R android/app/build/outputs || true
          echo "== POST-BUILD: find . -type f -name \"*.apk\" =="
          find . -type f -name "*.apk" -print || true

      - name: Fallback Gradle assembleDebug (se Flutter fallisce)
        if: failure()
        run: |
          cd android
          chmod +x gradlew || true
          ./gradlew :app:assembleDebug --stacktrace --no-daemon --warning-mode all | tee ../gradle_build.log

      - name: Upload APK (match globale)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: |
            **/*.apk
            **/outputs/**/*.apk
          if-no-files-found: warn

      - name: Upload outputs archive (sempre)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: outputs-archive
          path: |
            build/**
            android/app/build/outputs/**
          if-no-files-found: warn

      - name: Upload build logs (sempre)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            flutter_doctor.log
            flutter_pub_get.log
            flutter_build.log
            gradle_build.log
          if-no-files-found: warn

